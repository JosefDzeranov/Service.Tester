@model IEnumerable<WebApp.Models.Problemset.ProblemViewModel>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}

@if (SignInManager.IsSignedIn(User))
{
    var currentUser = await UserManager.GetUserAsync(User);

    var isAdmin = currentUser != null
                  && await UserManager.IsInRoleAsync(
                      currentUser,
                      "Admin");


    <h2>Все задания</h2>
    if (isAdmin)
    {
        <p>
            <a asp-action="SelectProblemType">Создать</a>
        </p>
    }
    <table class="table">
        <thead>
            <tr>
                <th>
                    Наименование
                </th>
                <th>
                   Тип
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item?.Name ?? "Кто то не задал название", "Description", "Problems", new { item.Id })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>

                        @if (isAdmin)
                        {
                            // @Html.ActionLink("Edit |", "Edit", new { id = item.Id })

                            @Html.ActionLink(" Delete", "Delete", "Problems", new { id = item.Id })

                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
